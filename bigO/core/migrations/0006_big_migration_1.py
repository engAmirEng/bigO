# Generated by Django 5.1.7 on 2025-04-28 08:43

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0005_siteconfiguration_main_telegraf"),
        ("node_manager", "0018_easytiernode_preferred_program_version"),
    ]

    operations = [
        migrations.CreateModel(
            name="CertbotInfo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("uuid", models.UUIDField(db_index=True, unique=True)),
                ("cert_name", models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CertificateTask",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("certbot_info_uuid", models.UUIDField()),
                ("task_type", models.PositiveSmallIntegerField(choices=[(1, "Issue"), (2, "Renewal")])),
                ("logs", models.TextField(blank=True)),
                ("is_closed", models.BooleanField()),
                ("is_success", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DNSProvider",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField()),
                ("provider_key", models.SlugField(max_length=127)),
                ("provider_args", models.JSONField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="siteconfiguration",
            name="main_haproxy",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="node_manager.programversion",
            ),
        ),
        migrations.AddField(
            model_name="siteconfiguration",
            name="main_xray",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="node_manager.programversion",
            ),
        ),
        migrations.AlterField(
            model_name="certificate",
            name="slug",
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name="privatekey",
            name="slug",
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name="siteconfiguration",
            name="main_nginx",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="node_manager.programversion",
            ),
        ),
        migrations.AddField(
            model_name="certificate",
            name="certbot_info",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="certificates",
                to="core.certbotinfo",
            ),
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        max_length=255,
                        unique=True,
                        validators=[django.core.validators.DomainNameValidator()],
                    ),
                ),
                ("is_root", models.BooleanField()),
                (
                    "dns_provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="dnsprovider_domains",
                        to="core.dnsprovider",
                    ),
                ),
                (
                    "root",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="subdomains",
                        to="core.domain",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DomainCertificate",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "certificate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificate_domaincertificates",
                        to="core.certificate",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="domain_domaincertificates",
                        to="core.domain",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="domain",
            constraint=models.CheckConstraint(
                condition=models.Q(models.Q(("root__isnull", True), ("is_root", False), _connector="OR")),
                name="either_root_or_isnotroot",
            ),
        ),
    ]
