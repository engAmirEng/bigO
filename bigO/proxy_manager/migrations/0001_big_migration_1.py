# Generated by Django 5.1.7 on 2025-04-28 08:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("node_manager", "0019_big_migration_1_1"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Agency",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField()),
                (
                    "sublink_header_template",
                    models.TextField(help_text="{{ subscription_obj, expires_at }}", null=True),
                ),
                ("is_active", models.BooleanField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Inbound",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_template", models.BooleanField(default=False)),
                ("name", models.SlugField()),
                ("inbound_template", models.TextField(help_text="{{ node_obj, inbound_tag, consumers_part }}")),
                ("consumer_obj_template", models.TextField(help_text="{{ subscriptionperiod_obj }}")),
                ("link_template", models.TextField(blank=True, help_text="{{ subscriptionperiod_obj }}")),
                ("nginx_path_config", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ISP",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OutboundGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField(unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubscriptionNodeUsage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("subscription_oid", models.PositiveIntegerField()),
                ("node_oid", models.PositiveIntegerField()),
                ("upload_traffic", models.PositiveSmallIntegerField()),
                ("download_traffic", models.PositiveSmallIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Config",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("nginx_config_http_template", models.TextField(help_text="{{ node_obj }}", null=True)),
                ("nginx_config_stream_template", models.TextField(help_text="{{ node_obj }}", null=True)),
                (
                    "xray_config_template",
                    models.TextField(help_text="{{ node, inbound_parts, rule_parts, balancer_parts, outbound_parts, outbound_tags, portal_parts, bridge_parts }}", null=True),
                ),
                (
                    "geoip",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="geoip_xrayconfig",
                        to="node_manager.programversion",
                    ),
                ),
                (
                    "geosite",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="geosite_xrayconfig",
                        to="node_manager.programversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConnectionRule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField()),
                ("xray_rules_template", models.TextField(help_text="[RuleObject], {{ node, subscriptionperiods, inbound_tags }}")),
                (
                    "destination_region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destinationregion_connectionrules",
                        to="proxy_manager.region",
                    ),
                ),
                (
                    "origin_region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="originregion_connectionrules",
                        to="proxy_manager.region",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField()),
                ("plan_provider_key", models.SlugField(max_length=127)),
                ("plan_provider_args", models.JSONField(blank=True, null=True)),
                (
                    "connection_rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="connectionrule_subscriptionplans",
                        to="proxy_manager.connectionrule",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubscriptionProfile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=127)),
                ("uuid", models.UUIDField(unique=True)),
                ("xray_uuid", models.UUIDField(blank=True, unique=True)),
                ("description", models.TextField(blank=True, max_length=4095, null=True)),
                ("is_active", models.BooleanField()),
                (
                    "initial_agency",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="initialagency_subscriptionprofiles",
                        to="proxy_manager.agency",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Agent",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField()),
                (
                    "agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agency_agents",
                        to="proxy_manager.agency",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_agents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "constraints": [models.UniqueConstraint(fields=("user", "agency"), name="unique_user_agency")],
            },
        ),
        migrations.CreateModel(
            name="NodeOutbound",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField()),
                ("xray_outbound_template", models.TextField(help_text="{{ node }}")),
                (
                    "node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="node_nodeoutbounds",
                        to="node_manager.node",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_nodeoutbounds",
                        to="proxy_manager.outboundgroup",
                    ),
                ),
            ],
            options={
                "constraints": [models.UniqueConstraint(fields=("name", "node"), name="unique_name_node")],
            },
        ),
        migrations.CreateModel(
            name="SubscriptionPeriod",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("plan_args", models.JSONField(blank=True, null=True)),
                ("selected_as_current", models.BooleanField()),
                ("last_sublink_at", models.DateTimeField(blank=True, null=True)),
                ("first_usage_at", models.DateTimeField(blank=True, null=True)),
                ("last_usage_at", models.DateTimeField(blank=True, null=True)),
                ("current_download_bytes", models.PositiveBigIntegerField(default=0)),
                ("current_upload_bytes", models.PositiveBigIntegerField(default=0)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="proxy_manager.subscriptionplan",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="periods",
                        to="proxy_manager.subscriptionprofile",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("selected_as_current", True)),
                        fields=("profile",),
                        name="one_selected_as_current_each_profile",
                    )
                ],
            },
        ),
    ]
