# Generated by Django 5.1.7 on 2025-05-09 18:58

import django.core.validators
import django.db.models.deletion
import re
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_ordering_created_at"),
        ("node_manager", "0021_ordering_created_at"),
        ("proxy_manager", "0005_ordering_created_at"),
    ]

    operations = [
        migrations.CreateModel(
            name="InboundComboGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField(unique=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="connectionrule",
            name="inbound_remarks_prefix",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="config",
            name="nginx_config_http_template",
            field=models.TextField(help_text="{{ node_obj, xray_path_matchers }}", null=True),
        ),
        migrations.AlterField(
            model_name="inboundtype",
            name="haproxy_backend",
            field=models.TextField(blank=True, null=True, help_text="{{ node_obj }}"),
        ),
        migrations.AlterField(
            model_name="inboundtype",
            name="haproxy_matcher_443",
            field=models.TextField(blank=True, null=True, help_text="{{ node_obj }}"),
        ),
        migrations.AlterField(
            model_name="inboundtype",
            name="haproxy_matcher_80",
            field=models.TextField(blank=True, null=True, help_text="{{ node_obj }}"),
        ),
        migrations.AlterField(
            model_name="inboundtype",
            name="inbound_template",
            field=models.TextField(help_text="{{ node_obj, inbound_tag, consumers_part }}"),
        ),
        migrations.AlterField(
            model_name="inboundtype",
            name="link_template",
            field=models.TextField(
                blank=True,
                help_text="{{ subscriptionperiod_obj, connection_rule, combo_stat: {'address', 'port', 'sni', 'domainhostheader', 'touch_node'}, remark_prefix }}",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="inboundtype",
            name="nginx_path_config",
            field=models.TextField(blank=True, null=True, help_text="{{ node_obj }}"),
        ),
        migrations.CreateModel(
            name="InboundCombo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField(unique=True)),
                (
                    "ports",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                    ),
                ),
                (
                    "inbound_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inboundtype_combos",
                        to="proxy_manager.inboundtype",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InboundComboDomainAddress",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("weight", models.PositiveSmallIntegerField()),
                (
                    "combo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="domainaddresses",
                        to="proxy_manager.inboundcombo",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="+", to="core.domain"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InboundComboDomainHostHeader",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("weight", models.PositiveSmallIntegerField()),
                (
                    "combo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="domainhostheaders",
                        to="proxy_manager.inboundcombo",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="+", to="core.domain"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InboundComboDomainSni",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("weight", models.PositiveSmallIntegerField()),
                (
                    "combo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="domainsnis",
                        to="proxy_manager.inboundcombo",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="+", to="core.domain"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InboundComboChoiceGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("count", models.PositiveSmallIntegerField()),
                ("ordering", models.PositiveSmallIntegerField()),
                (
                    "combo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="+", to="proxy_manager.inboundcombo"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="proxy_manager.inboundcombogroup",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="connectionrule",
            name="inboundcombogroup",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="inboundcombogroup_connectionrules",
                to="proxy_manager.inboundcombogroup",
            ),
        ),
        migrations.CreateModel(
            name="InboundComboIPAddress",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("weight", models.PositiveSmallIntegerField()),
                (
                    "combo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ipaddresses",
                        to="proxy_manager.inboundcombo",
                    ),
                ),
                (
                    "ip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="+", to="node_manager.publicip"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
    ]
