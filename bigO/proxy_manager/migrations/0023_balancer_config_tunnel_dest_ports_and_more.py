# Generated by Django 5.1.10 on 2025-08-10 22:52

import django.core.validators
import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("node_manager", "0034_remove_publicip_same_asn_domain"),
        ("proxy_manager", "0022_connectionrulebalancer"),
        ("taggit", "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx"),
    ]

    operations = [
        migrations.CreateModel(
            name="Balancer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField(max_length=63)),
                ("strategy_template", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="config",
            name="tunnel_dest_ports",
            field=models.CharField(
                blank=True, max_length=255, null=True, validators=[django.core.validators.int_list_validator]
            ),
        ),
        migrations.AddField(
            model_name="historicalconfig",
            name="tunnel_dest_ports",
            field=models.CharField(
                blank=True, max_length=255, null=True, validators=[django.core.validators.int_list_validator]
            ),
        ),
        migrations.CreateModel(
            name="ConnectionTunnel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("base_conn_uuid", models.UUIDField()),
                (
                    "balancer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="proxy_manager.balancer",
                    ),
                ),
                (
                    "dest_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="+", to="node_manager.node"
                    ),
                ),
                (
                    "source_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="+", to="node_manager.node"
                    ),
                ),
            ],
        options={"ordering": ["-created_at"]},
        ),
        migrations.CreateModel(
            name="ConnectionTunnelOutbound",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.SlugField()),
                ("weight", models.PositiveSmallIntegerField()),
                ("is_reverse", models.BooleanField(default=False)),
                (
                    "xray_outbound_template",
                    models.TextField(
                        help_text="{{ source_node, dest_node, tag, nodeinternaluser, combo_stat: {'address', 'port', 'sni', 'domainhostheader', 'touch_node'} }}"
                    ),
                ),
                (
                    "inbound_spec",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inboundspec_connectiontunneloutbounds",
                        to="proxy_manager.inboundspec",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "to_inbound_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="toinboundtype_connectiontunneloutbounds",
                        to="proxy_manager.inboundtype",
                    ),
                ),
                (
                    "tunnel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tunnel_outbounds",
                        to="proxy_manager.connectiontunnel",
                    ),
                ),
            ],
        options={"ordering": ["-created_at"]}
        ),
        migrations.CreateModel(
            name="LocalTunnelPort",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("local_port", models.PositiveIntegerField()),
                ("dest_port", models.PositiveIntegerField()),
                (
                    "source_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="+", to="node_manager.node"
                    ),
                ),
                (
                    "tunnel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="proxy_manager.connectiontunnel"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="connectiontunnel",
            constraint=models.UniqueConstraint(
                fields=("source_node", "dest_node"), name="unique_tunnel_between_nodes"
            ),
        ),
        migrations.AddConstraint(
            model_name="connectiontunneloutbound",
            constraint=models.UniqueConstraint(
                fields=("name", "tunnel"), name="unique_name_tunnel_connectiontunneloutbound"
            ),
        ),
    ]
