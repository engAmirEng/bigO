# Generated by Django 5.1.10 on 2025-07-17 20:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TelegramFile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("file_id", models.CharField(max_length=255)),
                ("file_unique_id", models.CharField(max_length=255)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TelegramBot",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("tid", models.BigIntegerField()),
                ("tusername", models.CharField(max_length=254)),
                ("title", models.CharField(max_length=63)),
                ("api_token", models.CharField(max_length=127)),
                ("secret_token", models.CharField(max_length=255)),
                ("url_specifier", models.CharField(db_index=True, max_length=255, unique=True)),
                ("domain_name", models.CharField(max_length=255)),
                ("webhook_synced_at", models.DateTimeField(blank=True, null=True)),
                ("is_revoked", models.BooleanField(default=False)),
                ("is_powered_off", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TelegramChat",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("tid", models.BigIntegerField(unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("private", "Private"),
                            ("group", "Group"),
                            ("supergroup", "Supergroup"),
                            ("channel", "Channel"),
                        ],
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                ("is_forum", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TelegramAudio",
            fields=[
                (
                    "telegramfile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="telegram_bot.telegramfile",
                    ),
                ),
                ("duration", models.IntegerField()),
                ("performer", models.CharField(blank=True, max_length=255, null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                ("mime_type", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=("telegram_bot.telegramfile",),
        ),
        migrations.CreateModel(
            name="TelegramDocument",
            fields=[
                (
                    "telegramfile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="telegram_bot.telegramfile",
                    ),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                ("mime_type", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=("telegram_bot.telegramfile",),
        ),
        migrations.CreateModel(
            name="TelegramPhotoSize",
            fields=[
                (
                    "telegramfile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="telegram_bot.telegramfile",
                    ),
                ),
                ("width", models.IntegerField()),
                ("height", models.IntegerField()),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=("telegram_bot.telegramfile",),
        ),
        migrations.CreateModel(
            name="TelegramVoice",
            fields=[
                (
                    "telegramfile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="telegram_bot.telegramfile",
                    ),
                ),
                ("duration", models.IntegerField()),
                ("mime_type", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=("telegram_bot.telegramfile",),
        ),
        migrations.AddField(
            model_name="telegramfile",
            name="bot",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="telegram_files",
                to="telegram_bot.telegrambot",
            ),
        ),
        migrations.CreateModel(
            name="TelegramMessage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("tid", models.IntegerField(db_comment="id of message in telegram server", unique=True)),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("photo", "Photo"),
                            ("video", "Video"),
                            ("voice", "Voice"),
                        ],
                        max_length=255,
                    ),
                ),
                ("text", models.TextField(blank=True, null=True)),
                ("caption", models.TextField(blank=True, null=True)),
                ("media_group_id", models.CharField(blank=True, max_length=254, null=True)),
                (
                    "bot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telegrammessages",
                        to="telegram_bot.telegrambot",
                    ),
                ),
                (
                    "sent_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telegrammessages_sentby",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "audio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telegrammessages",
                        to="telegram_bot.telegramaudio",
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telegrammessages",
                        to="telegram_bot.telegramdocument",
                    ),
                ),
                (
                    "photo",
                    models.ManyToManyField(related_name="telegrammessages", to="telegram_bot.telegramphotosize"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TelegramMessageEntity",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("mention", "Mention"),
                            ("hashtag", "Hashtag"),
                            ("cashtag", "Cachtag"),
                            ("bot_command", "Bot Command"),
                            ("url", "Url"),
                            ("email", "Email"),
                            ("phone_number", "Phone Number"),
                            ("bold", "Bold"),
                            ("italic", "Italic"),
                            ("underline", "Underline"),
                            ("strikethrough", "Strikethrough"),
                            ("spoiler", "Spoiler"),
                            ("blockquote", "Blockquote"),
                            ("expandable_blockquote", "Expandable Blockquote"),
                            ("code", "Code"),
                            ("pre", "Pre"),
                            ("text_link", "Text Link"),
                            ("text_mention", "Text Mention"),
                            ("custom_emoji", "Custom Emoji"),
                        ],
                        max_length=31,
                    ),
                ),
                ("offset", models.IntegerField()),
                ("length", models.IntegerField()),
                ("url", models.URLField(null=True)),
                (
                    "telegram_message_caption",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="caption_entities",
                        to="telegram_bot.telegrammessage",
                    ),
                ),
                (
                    "telegram_message_text",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="text_entities",
                        to="telegram_bot.telegrammessage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TelegramUser",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("user_tid", models.BigIntegerField(db_comment="user id in telegram")),
                (
                    "tbot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telegramuserprofiles",
                        to="telegram_bot.telegrambot",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telegramuserprofile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TelegramChatMember",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ChatMemberStatus.CREATOR", "Creator"),
                            ("ChatMemberStatus.ADMINISTRATOR", "Administrator"),
                            ("ChatMemberStatus.MEMBER", "Member"),
                            ("ChatMemberStatus.RESTRICTED", "Restricted"),
                            ("ChatMemberStatus.LEFT", "Left"),
                            ("ChatMemberStatus.KICKED", "Kicked"),
                        ],
                        max_length=31,
                    ),
                ),
                (
                    "tbot",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="telegram_bot.telegrambot",
                    ),
                ),
                (
                    "tchat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="+", to="telegram_bot.telegramchat"
                    ),
                ),
                (
                    "tuser",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="telegram_bot.telegramuser",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="telegramdocument",
            name="thumbnail",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="telegramdocument",
                to="telegram_bot.telegramphotosize",
            ),
        ),
        migrations.AddField(
            model_name="telegramaudio",
            name="thumbnail",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="telegramaudio",
                to="telegram_bot.telegramphotosize",
            ),
        ),
        migrations.CreateModel(
            name="TelegramVideo",
            fields=[
                (
                    "telegramfile_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="telegram_bot.telegramfile",
                    ),
                ),
                ("width", models.IntegerField()),
                ("height", models.IntegerField()),
                ("duration", models.IntegerField()),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                ("mime_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "thumbnail",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="telegramvideo",
                        to="telegram_bot.telegramphotosize",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
            bases=("telegram_bot.telegramfile",),
        ),
        migrations.AddField(
            model_name="telegrammessage",
            name="video",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="telegrammessages",
                to="telegram_bot.telegramvideo",
            ),
        ),
        migrations.AddField(
            model_name="telegrammessage",
            name="voice",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="telegrammessages",
                to="telegram_bot.telegramvoice",
            ),
        ),
        migrations.AddConstraint(
            model_name="telegramfile",
            constraint=models.UniqueConstraint(fields=("file_id", "file_unique_id"), name="unique_file"),
        ),
        migrations.AddConstraint(
            model_name="telegrammessageentity",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("telegram_message_caption__isnull", False), ("telegram_message_text__isnull", True)),
                    models.Q(("telegram_message_caption__isnull", True), ("telegram_message_text__isnull", False)),
                    _connector="OR",
                ),
                name="either_text_or_caption_entity",
            ),
        ),
        migrations.AddConstraint(
            model_name="telegramuser",
            constraint=models.UniqueConstraint(fields=("user_tid", "tbot"), name="unique_tuser_tbot"),
        ),
        migrations.AddConstraint(
            model_name="telegramchatmember",
            constraint=models.UniqueConstraint(
                condition=models.Q(("tbot__isnull", False)),
                fields=("tbot", "tchat"),
                name="unique_tbot_chat_condition",
            ),
        ),
        migrations.AddConstraint(
            model_name="telegramchatmember",
            constraint=models.UniqueConstraint(
                condition=models.Q(("tuser__isnull", False)),
                fields=("tuser", "tchat"),
                name="unique_tuser_chat_condition",
            ),
        ),
        migrations.AddConstraint(
            model_name="telegramchatmember",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(
                        models.Q(("tbot__isnull", True), ("tuser__isnull", False)),
                        models.Q(("tbot__isnull", False), ("tuser__isnull", True)),
                        _connector="OR",
                    )
                ),
                name="one_of_tbot_or_tuser",
            ),
        ),
    ]
